{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nvar baseUrl = 'https://recipe-maker-34e87-default-rtdb.firebaseio.com';\nvar usersUrl = baseUrl + \"/users.json\";\nexport var registerAuth = function () {\n  var _ref = _asyncToGenerator(function* (user) {\n    try {\n      var res = yield axios.get(usersUrl);\n      var users = Object.keys(res.data).map(function (key) {\n        return res.data[key];\n      });\n      var userExists = users.find(function (u) {\n        return u.email === user.email;\n      });\n      if (userExists) {\n        alert(\"User already exists\");\n        return;\n      }\n      var newUser = {\n        email: user.email,\n        username: user.username,\n        password: user.password\n      };\n      var res2 = yield axios.post(usersUrl, newUser);\n      alert(\"User created successfully\");\n      return true;\n    } catch (error) {\n      alert(error);\n      return false;\n    }\n  });\n  return function registerAuth(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","baseUrl","usersUrl","registerAuth","_ref","_asyncToGenerator","user","res","get","users","Object","keys","data","map","key","userExists","find","u","email","alert","newUser","username","password","res2","post","error","_x","apply","arguments"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/middlewares/registerAuth.js"],"sourcesContent":["import axios from \"axios\";\r\nconst baseUrl='https://recipe-maker-34e87-default-rtdb.firebaseio.com';\r\nconst usersUrl = `${baseUrl}/users.json`;\r\nexport const registerAuth = async (user) => {\r\n    try {\r\n        const res = await axios.get(usersUrl);\r\n\r\n        const users = Object.keys(res.data).map((key) => {\r\n            return res.data[key];\r\n        });\r\n        const userExists = users.find((u) => u.email === user.email);\r\n        if (userExists) {\r\n            alert(\"User already exists\");\r\n            return;\r\n        }\r\n\r\n        const newUser = {\r\n            email: user.email,\r\n            username: user.username,\r\n            password: user.password,\r\n        };\r\n        const res2 = await axios.post(usersUrl, newUser);\r\n        alert(\"User created successfully\");\r\n        return true;\r\n        \r\n    }\r\n    catch (error) {\r\n        alert(error);\r\n        return false;\r\n\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,IAAMC,OAAO,GAAC,wDAAwD;AACtE,IAAMC,QAAQ,GAAMD,OAAO,gBAAa;AACxC,OAAO,IAAME,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAI,EAAK;IACxC,IAAI;MACA,IAAMC,GAAG,SAASP,KAAK,CAACQ,GAAG,CAACN,QAAQ,CAAC;MAErC,IAAMO,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,GAAG,CAACK,IAAI,CAAC,CAACC,GAAG,CAAC,UAACC,GAAG,EAAK;QAC7C,OAAOP,GAAG,CAACK,IAAI,CAACE,GAAG,CAAC;MACxB,CAAC,CAAC;MACF,IAAMC,UAAU,GAAGN,KAAK,CAACO,IAAI,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,KAAK,KAAKZ,IAAI,CAACY,KAAK;MAAA,EAAC;MAC5D,IAAIH,UAAU,EAAE;QACZI,KAAK,CAAC,qBAAqB,CAAC;QAC5B;MACJ;MAEA,IAAMC,OAAO,GAAG;QACZF,KAAK,EAAEZ,IAAI,CAACY,KAAK;QACjBG,QAAQ,EAAEf,IAAI,CAACe,QAAQ;QACvBC,QAAQ,EAAEhB,IAAI,CAACgB;MACnB,CAAC;MACD,IAAMC,IAAI,SAASvB,KAAK,CAACwB,IAAI,CAACtB,QAAQ,EAAEkB,OAAO,CAAC;MAChDD,KAAK,CAAC,2BAA2B,CAAC;MAClC,OAAO,IAAI;IAEf,CAAC,CACD,OAAOM,KAAK,EAAE;MACVN,KAAK,CAACM,KAAK,CAAC;MACZ,OAAO,KAAK;IAEhB;EACJ,CAAC;EAAA,gBA5BYtB,YAAYA,CAAAuB,EAAA;IAAA,OAAAtB,IAAA,CAAAuB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA4BxB"},"metadata":{},"sourceType":"module"}