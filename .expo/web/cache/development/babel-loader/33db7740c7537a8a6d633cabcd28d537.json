{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nimport Dimensions from \"../Dimensions\";\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  };\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  };\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n  return PixelRatio;\n}();\nexport default PixelRatio;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","Dimensions","PixelRatio","get","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/node_modules/react-native-web/dist/exports/PixelRatio/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport Dimensions from '../Dimensions';\n\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  /**\n   * Returns the device pixel density.\n   */\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  };\n\n  /**\n   * No equivalent for Web\n   */\n\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  };\n\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexport default PixelRatio;"],"mappings":"AAAA,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAYxJ,OAAOC,UAAU;AAMjB,IAAIC,UAAU,GAAG,YAAY;EAC3B,SAASA,UAAUA,CAAA,EAAG;IACpBL,eAAe,CAAC,IAAI,EAAEK,UAAU,CAAC;EACnC;EAKAA,UAAU,CAACC,GAAG,GAAG,SAASA,GAAGA,CAAA,EAAG;IAC9B,OAAOF,UAAU,CAACE,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;EACvC,CAAC;EAODF,UAAU,CAACG,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;IAChD,OAAOJ,UAAU,CAACE,GAAG,CAAC,QAAQ,CAAC,CAACG,SAAS,IAAIJ,UAAU,CAACC,GAAG,EAAE;EAC/D,CAAC;EAQDD,UAAU,CAACK,yBAAyB,GAAG,SAASA,yBAAyBA,CAACC,UAAU,EAAE;IACpF,OAAOC,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGN,UAAU,CAACC,GAAG,EAAE,CAAC;EAClD,CAAC;EAUDD,UAAU,CAACS,mBAAmB,GAAG,SAASA,mBAAmBA,CAACH,UAAU,EAAE;IACxE,IAAII,KAAK,GAAGV,UAAU,CAACC,GAAG,EAAE;IAC5B,OAAOM,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGI,KAAK,CAAC,GAAGA,KAAK;EAC/C,CAAC;EAED,OAAOV,UAAU;AACnB,CAAC,EAAE;AAEH,eAAeA,UAAU"},"metadata":{},"sourceType":"module"}