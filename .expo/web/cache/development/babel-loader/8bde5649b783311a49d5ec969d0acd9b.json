{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nimport ListViewDataSource from \"../ListView/ListViewDataSource\";\nvar SwipeableListViewDataSource = function () {\n  function SwipeableListViewDataSource(params) {\n    var _this = this;\n    _classCallCheck(this, SwipeableListViewDataSource);\n    this._dataSource = new ListViewDataSource({\n      getRowData: params.getRowData,\n      getSectionHeaderData: params.getSectionHeaderData,\n      rowHasChanged: function rowHasChanged(row1, row2) {\n        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);\n      },\n      sectionHeaderHasChanged: params.sectionHeaderHasChanged\n    });\n  }\n  SwipeableListViewDataSource.prototype.cloneWithRowsAndSections = function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);\n    this._dataBlob = dataBlob;\n    this.rowIdentities = this._dataSource.rowIdentities;\n    this.sectionIdentities = this._dataSource.sectionIdentities;\n    return this;\n  };\n  SwipeableListViewDataSource.prototype.getDataSource = function getDataSource() {\n    return this._dataSource;\n  };\n  SwipeableListViewDataSource.prototype.getOpenRowID = function getOpenRowID() {\n    return this._openRowID;\n  };\n  SwipeableListViewDataSource.prototype.getFirstRowID = function getFirstRowID() {\n    if (this.rowIdentities) {\n      return this.rowIdentities[0] && this.rowIdentities[0][0];\n    }\n    return Object.keys(this._dataBlob)[0];\n  };\n  SwipeableListViewDataSource.prototype.getLastRowID = function getLastRowID() {\n    if (this.rowIdentities && this.rowIdentities.length) {\n      var lastSection = this.rowIdentities[this.rowIdentities.length - 1];\n      if (lastSection && lastSection.length) {\n        return lastSection[lastSection.length - 1];\n      }\n    }\n    return Object.keys(this._dataBlob)[this._dataBlob.length - 1];\n  };\n  SwipeableListViewDataSource.prototype.setOpenRowID = function setOpenRowID(rowID) {\n    this._previousOpenRowID = this._openRowID;\n    this._openRowID = rowID;\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);\n    return this;\n  };\n  return SwipeableListViewDataSource;\n}();\nexport default SwipeableListViewDataSource;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","ListViewDataSource","SwipeableListViewDataSource","params","_this","_dataSource","getRowData","getSectionHeaderData","rowHasChanged","row1","row2","id","_previousOpenRowID","_openRowID","sectionHeaderHasChanged","prototype","cloneWithRowsAndSections","dataBlob","sectionIdentities","rowIdentities","_dataBlob","getDataSource","getOpenRowID","getFirstRowID","Object","keys","getLastRowID","length","lastSection","setOpenRowID","rowID"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/node_modules/react-native-web/dist/vendor/react-native/SwipeableListView/SwipeableListViewDataSource.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SwipeableListViewDataSource\n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport ListViewDataSource from '../ListView/ListViewDataSource';\n\n/**\n * Data source wrapper around ListViewDataSource to allow for tracking of\n * which row is swiped open and close opened row(s) when another row is swiped\n * open.\n *\n * See https://github.com/facebook/react-native/pull/5602 for why\n * ListViewDataSource is not subclassed.\n */\n\nvar SwipeableListViewDataSource = function () {\n  function SwipeableListViewDataSource(params) {\n    var _this = this;\n\n    _classCallCheck(this, SwipeableListViewDataSource);\n\n    this._dataSource = new ListViewDataSource({\n      getRowData: params.getRowData,\n      getSectionHeaderData: params.getSectionHeaderData,\n      rowHasChanged: function rowHasChanged(row1, row2) {\n        /**\n         * Row needs to be re-rendered if its swiped open/close status is\n         * changed, or its data blob changed.\n         */\n        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);\n      },\n      sectionHeaderHasChanged: params.sectionHeaderHasChanged\n    });\n  }\n\n  SwipeableListViewDataSource.prototype.cloneWithRowsAndSections = function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);\n\n    this._dataBlob = dataBlob;\n    this.rowIdentities = this._dataSource.rowIdentities;\n    this.sectionIdentities = this._dataSource.sectionIdentities;\n\n    return this;\n  };\n\n  // For the actual ListView to use\n\n\n  SwipeableListViewDataSource.prototype.getDataSource = function getDataSource() {\n    return this._dataSource;\n  };\n\n  SwipeableListViewDataSource.prototype.getOpenRowID = function getOpenRowID() {\n    return this._openRowID;\n  };\n\n  SwipeableListViewDataSource.prototype.getFirstRowID = function getFirstRowID() {\n    /**\n     * If rowIdentities is specified, find the first data row from there since\n     * we don't want to attempt to bounce section headers. If unspecified, find\n     * the first data row from _dataBlob.\n     */\n    if (this.rowIdentities) {\n      return this.rowIdentities[0] && this.rowIdentities[0][0];\n    }\n    return Object.keys(this._dataBlob)[0];\n  };\n\n  SwipeableListViewDataSource.prototype.getLastRowID = function getLastRowID() {\n    if (this.rowIdentities && this.rowIdentities.length) {\n      var lastSection = this.rowIdentities[this.rowIdentities.length - 1];\n      if (lastSection && lastSection.length) {\n        return lastSection[lastSection.length - 1];\n      }\n    }\n    return Object.keys(this._dataBlob)[this._dataBlob.length - 1];\n  };\n\n  SwipeableListViewDataSource.prototype.setOpenRowID = function setOpenRowID(rowID) {\n    this._previousOpenRowID = this._openRowID;\n    this._openRowID = rowID;\n\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);\n\n    return this;\n  };\n\n  return SwipeableListViewDataSource;\n}();\n\nexport default SwipeableListViewDataSource;"],"mappings":"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"},"metadata":{},"sourceType":"module"}