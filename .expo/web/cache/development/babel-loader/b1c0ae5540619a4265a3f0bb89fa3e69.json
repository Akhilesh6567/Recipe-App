{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport UserContext from \"../context/auth/UserContext\";\nimport { useContext } from \"react\";\nimport styles from \"./LoginStyles\";\nimport { loginAuth } from \"../middlewares/loginAuth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var userContext = useContext(UserContext);\n  var user = userContext.user,\n    setUser = userContext.setUser;\n  var resetForm = function resetForm() {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (email == \"\" || password == \"\") {\n          Alert.alert(\"Please Enter Username and Password\");\n        } else {\n          var isLoginSucces = yield loginAuth({\n            email: email,\n            password: password\n          });\n          if (isLoginSucces) {\n            setUser(function () {\n              return _objectSpread({}, isLoginSucces);\n            });\n            isLoginSucces.email == \"admin@gmail.com\" ? navigation.navigate(\"AdminPanel\") : navigation.navigate(\"Tabs\");\n          }\n          resetForm();\n        }\n      } catch (error) {\n        alert(error);\n      }\n    });\n    return function login() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerView,\n      children: [_jsx(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: styles.logo\n      }), _jsx(Text, {\n        style: styles.logoText,\n        children: \"Welcome to Recipeo\"\n      })]\n    }), _jsx(Text, {\n      style: styles.loginheading,\n      children: \" Login \"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        value: email,\n        placeholder: \"Email\",\n        placeholderTextColor: \"grey\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Password\",\n        value: password,\n        placeholderTextColor: \"grey\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.buttonView,\n      children: _jsx(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: login,\n        children: _jsx(Text, {\n          style: styles.loginText,\n          children: \"LOGIN\"\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.register,\n      children: [_jsx(Text, {\n        style: styles.registerText,\n        children: \"Don't have an account? \"\n      }), _jsx(TouchableOpacity, {\n        style: styles.registerBtn,\n        onPress: function onPress() {\n          resetForm();\n          navigation.navigate(\"Register\");\n        },\n        children: _jsx(Text, {\n          style: styles.registerBtnText,\n          children: \"Register\"\n        })\n      })]\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","Alert","Image","Text","View","TextInput","TouchableOpacity","UserContext","useContext","styles","loginAuth","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","userContext","user","setUser","resetForm","login","_ref2","_asyncToGenerator","alert","isLoginSucces","_objectSpread","navigate","error","apply","arguments","style","container","children","headerView","source","require","logo","logoText","loginheading","inputView","value","placeholder","placeholderTextColor","onChangeText","secureTextEntry","buttonView","loginBtn","onPress","loginText","register","registerText","registerBtn","registerBtnText"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/screens/Login.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Alert, Image, Text, View, TextInput, TouchableOpacity } from 'react-native'\r\nimport UserContext from \"../context/auth/UserContext\";\r\nimport { useContext } from \"react\";\r\nimport styles from './LoginStyles';\r\nimport { loginAuth } from '../middlewares/loginAuth'\r\n\r\n\r\nconst Login = ({ navigation }) => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const userContext = useContext(UserContext);\r\n  const { user, setUser } = userContext;\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  }\r\n  const login = async () => {\r\n    try {\r\n      if (email == \"\" || password == \"\") {\r\n        Alert.alert(\"Please Enter Username and Password\");\r\n      }\r\n      else {\r\n        const isLoginSucces = await loginAuth({ email, password });\r\n        if (isLoginSucces) {\r\n          setUser(\r\n            () => {\r\n              return { ...isLoginSucces }\r\n            }\r\n          )\r\n          // go to profile page after login\r\n          isLoginSucces.email == \"admin@gmail.com\" ? navigation.navigate(\"AdminPanel\") : navigation.navigate(\"Tabs\")\r\n        }\r\n        resetForm()\r\n\r\n      }\r\n    }\r\n    catch (error) {\r\n      alert(error);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <View style={styles.headerView}>\r\n        <Image source={require('../assets/logo.png')} style={styles.logo} />\r\n        <Text style={styles.logoText}>Welcome to Recipeo</Text>\r\n      </View>\r\n\r\n      <Text style={styles.loginheading}> Login </Text>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          placeholderTextColor=\"grey\"\r\n          onChangeText={(email) => setEmail(email)}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          placeholderTextColor=\"grey\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.buttonView}>\r\n        <TouchableOpacity style={styles.loginBtn}\r\n          onPress={login}\r\n        >\r\n          <Text style={styles.loginText}>LOGIN</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.register}>\r\n        <Text style={styles.registerText}>Don't have an account? </Text>\r\n        <TouchableOpacity style={styles.registerBtn} onPress={() => { resetForm(); navigation.navigate(\"Register\") }}>\r\n          <Text style={styles.registerBtnText}>Register</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}