{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nimport merge from 'deep-assign';\nvar mergeLocalStorageItem = function mergeLocalStorageItem(key, value) {\n  var oldValue = window.localStorage.getItem(key);\n  var oldObject = JSON.parse(oldValue);\n  var newObject = JSON.parse(value);\n  var nextValue = JSON.stringify(merge({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\nvar createPromise = function createPromise(getValue, callback) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var value = getValue();\n      if (callback) {\n        callback(null, value);\n      }\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n      reject(err);\n    }\n  });\n};\nvar createPromiseAll = function createPromiseAll(promises, callback, processResult) {\n  return Promise.all(promises).then(function (result) {\n    var value = processResult ? processResult(result) : null;\n    callback && callback(null, value);\n    return Promise.resolve(value);\n  }, function (errors) {\n    callback && callback(errors);\n    return Promise.reject(errors);\n  });\n};\nvar AsyncStorage = function () {\n  function AsyncStorage() {\n    _classCallCheck(this, AsyncStorage);\n  }\n  AsyncStorage.clear = function clear(callback) {\n    return createPromise(function () {\n      window.localStorage.clear();\n    }, callback);\n  };\n  AsyncStorage.flushGetRequests = function flushGetRequests() {};\n  AsyncStorage.getAllKeys = function getAllKeys(callback) {\n    return createPromise(function () {\n      var numberOfKeys = window.localStorage.length;\n      var keys = [];\n      for (var i = 0; i < numberOfKeys; i += 1) {\n        var key = window.localStorage.key(i);\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  };\n  AsyncStorage.getItem = function getItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.getItem(key);\n    }, callback);\n  };\n  AsyncStorage.multiGet = function multiGet(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.getItem(key);\n    });\n    var processResult = function processResult(result) {\n      return result.map(function (value, i) {\n        return [keys[i], value];\n      });\n    };\n    return createPromiseAll(promises, callback, processResult);\n  };\n  AsyncStorage.setItem = function setItem(key, value, callback) {\n    return createPromise(function () {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  };\n  AsyncStorage.multiSet = function multiSet(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.setItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n  AsyncStorage.mergeItem = function mergeItem(key, value, callback) {\n    return createPromise(function () {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  };\n  AsyncStorage.multiMerge = function multiMerge(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.mergeItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n  AsyncStorage.removeItem = function removeItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  };\n  AsyncStorage.multiRemove = function multiRemove(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.removeItem(key);\n    });\n    return createPromiseAll(promises, callback);\n  };\n  return AsyncStorage;\n}();\nexport default AsyncStorage;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","merge","mergeLocalStorageItem","key","value","oldValue","window","localStorage","getItem","oldObject","JSON","parse","newObject","nextValue","stringify","setItem","createPromise","getValue","callback","Promise","resolve","reject","err","createPromiseAll","promises","processResult","all","then","result","errors","AsyncStorage","clear","flushGetRequests","getAllKeys","numberOfKeys","length","keys","i","push","multiGet","map","multiSet","keyValuePairs","item","mergeItem","multiMerge","removeItem","multiRemove"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/node_modules/react-native-web/dist/exports/AsyncStorage/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport merge from 'deep-assign';\n\nvar mergeLocalStorageItem = function mergeLocalStorageItem(key, value) {\n  var oldValue = window.localStorage.getItem(key);\n  var oldObject = JSON.parse(oldValue);\n  var newObject = JSON.parse(value);\n  var nextValue = JSON.stringify(merge({}, oldObject, newObject));\n  window.localStorage.setItem(key, nextValue);\n};\n\nvar createPromise = function createPromise(getValue, callback) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var value = getValue();\n      if (callback) {\n        callback(null, value);\n      }\n      resolve(value);\n    } catch (err) {\n      if (callback) {\n        callback(err);\n      }\n      reject(err);\n    }\n  });\n};\n\nvar createPromiseAll = function createPromiseAll(promises, callback, processResult) {\n  return Promise.all(promises).then(function (result) {\n    var value = processResult ? processResult(result) : null;\n    callback && callback(null, value);\n    return Promise.resolve(value);\n  }, function (errors) {\n    callback && callback(errors);\n    return Promise.reject(errors);\n  });\n};\n\nvar AsyncStorage = function () {\n  function AsyncStorage() {\n    _classCallCheck(this, AsyncStorage);\n  }\n\n  /**\n   * Erases *all* AsyncStorage for the domain.\n   */\n  AsyncStorage.clear = function clear(callback) {\n    return createPromise(function () {\n      window.localStorage.clear();\n    }, callback);\n  };\n\n  /**\n   * (stub) Flushes any pending requests using a single batch call to get the data.\n   */\n\n\n  AsyncStorage.flushGetRequests = function flushGetRequests() {};\n\n  /**\n   * Gets *all* keys known to the app, for all callers, libraries, etc.\n   */\n\n\n  AsyncStorage.getAllKeys = function getAllKeys(callback) {\n    return createPromise(function () {\n      var numberOfKeys = window.localStorage.length;\n      var keys = [];\n      for (var i = 0; i < numberOfKeys; i += 1) {\n        var key = window.localStorage.key(i);\n        keys.push(key);\n      }\n      return keys;\n    }, callback);\n  };\n\n  /**\n   * Fetches `key` value.\n   */\n\n\n  AsyncStorage.getItem = function getItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.getItem(key);\n    }, callback);\n  };\n\n  /**\n   * multiGet resolves to an array of key-value pair arrays that matches the\n   * input format of multiSet.\n   *\n   *   multiGet(['k1', 'k2']) -> [['k1', 'val1'], ['k2', 'val2']]\n   */\n\n\n  AsyncStorage.multiGet = function multiGet(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.getItem(key);\n    });\n    var processResult = function processResult(result) {\n      return result.map(function (value, i) {\n        return [keys[i], value];\n      });\n    };\n    return createPromiseAll(promises, callback, processResult);\n  };\n\n  /**\n   * Sets `value` for `key`.\n   */\n\n\n  AsyncStorage.setItem = function setItem(key, value, callback) {\n    return createPromise(function () {\n      window.localStorage.setItem(key, value);\n    }, callback);\n  };\n\n  /**\n   * Takes an array of key-value array pairs.\n   *   multiSet([['k1', 'val1'], ['k2', 'val2']])\n   */\n\n\n  AsyncStorage.multiSet = function multiSet(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.setItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  /**\n   * Merges existing value with input value, assuming they are stringified JSON.\n   */\n\n\n  AsyncStorage.mergeItem = function mergeItem(key, value, callback) {\n    return createPromise(function () {\n      mergeLocalStorageItem(key, value);\n    }, callback);\n  };\n\n  /**\n   * Takes an array of key-value array pairs and merges them with existing\n   * values, assuming they are stringified JSON.\n   *\n   *   multiMerge([['k1', 'val1'], ['k2', 'val2']])\n   */\n\n\n  AsyncStorage.multiMerge = function multiMerge(keyValuePairs, callback) {\n    var promises = keyValuePairs.map(function (item) {\n      return AsyncStorage.mergeItem(item[0], item[1]);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  /**\n   * Removes a `key`\n   */\n\n\n  AsyncStorage.removeItem = function removeItem(key, callback) {\n    return createPromise(function () {\n      return window.localStorage.removeItem(key);\n    }, callback);\n  };\n\n  /**\n   * Delete all the keys in the `keys` array.\n   */\n\n\n  AsyncStorage.multiRemove = function multiRemove(keys, callback) {\n    var promises = keys.map(function (key) {\n      return AsyncStorage.removeItem(key);\n    });\n    return createPromiseAll(promises, callback);\n  };\n\n  return AsyncStorage;\n}();\n\nexport default AsyncStorage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}