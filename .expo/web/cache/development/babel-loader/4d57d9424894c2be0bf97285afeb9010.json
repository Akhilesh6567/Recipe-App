{"ast":null,"code":"import normalizeColor from \"../../modules/normalizeColor\";\nimport normalizeValue from \"./normalizeValue\";\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n    shadowOffset = style.shadowOffset,\n    shadowOpacity = style.shadowOpacity,\n    shadowRadius = style.shadowRadius;\n  var _ref = shadowOffset || defaultOffset,\n    height = _ref.height,\n    width = _ref.width;\n  var offsetX = normalizeValue(null, width);\n  var offsetY = normalizeValue(null, height);\n  var blurRadius = normalizeValue(null, shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color) {\n    return offsetX + ' ' + offsetY + ' ' + blurRadius + ' ' + color;\n  }\n};\nexport default resolveShadowValue;","map":{"version":3,"names":["normalizeColor","normalizeValue","defaultOffset","height","width","resolveShadowValue","style","shadowColor","shadowOffset","shadowOpacity","shadowRadius","_ref","offsetX","offsetY","blurRadius","color"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/node_modules/react-native-web/dist/exports/StyleSheet/resolveShadowValue.js"],"sourcesContent":["/**\n * Copyright (c) 2018-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport normalizeColor from '../../modules/normalizeColor';\nimport normalizeValue from './normalizeValue';\n\nvar defaultOffset = { height: 0, width: 0 };\n\nvar resolveShadowValue = function resolveShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValue(null, width);\n  var offsetY = normalizeValue(null, height);\n  var blurRadius = normalizeValue(null, shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (color) {\n    return offsetX + ' ' + offsetY + ' ' + blurRadius + ' ' + color;\n  }\n};\n\nexport default resolveShadowValue;"],"mappings":"AASA,OAAOA,cAAc;AACrB,OAAOC,cAAc;AAErB,IAAIC,aAAa,GAAG;EAAEC,MAAM,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC;AAE3C,IAAIC,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,KAAK,EAAE;EAC1D,IAAIC,WAAW,GAAGD,KAAK,CAACC,WAAW;IAC/BC,YAAY,GAAGF,KAAK,CAACE,YAAY;IACjCC,aAAa,GAAGH,KAAK,CAACG,aAAa;IACnCC,YAAY,GAAGJ,KAAK,CAACI,YAAY;EAErC,IAAIC,IAAI,GAAGH,YAAY,IAAIN,aAAa;IACpCC,MAAM,GAAGQ,IAAI,CAACR,MAAM;IACpBC,KAAK,GAAGO,IAAI,CAACP,KAAK;EAEtB,IAAIQ,OAAO,GAAGX,cAAc,CAAC,IAAI,EAAEG,KAAK,CAAC;EACzC,IAAIS,OAAO,GAAGZ,cAAc,CAAC,IAAI,EAAEE,MAAM,CAAC;EAC1C,IAAIW,UAAU,GAAGb,cAAc,CAAC,IAAI,EAAES,YAAY,IAAI,CAAC,CAAC;EACxD,IAAIK,KAAK,GAAGf,cAAc,CAACO,WAAW,IAAI,OAAO,EAAEE,aAAa,CAAC;EACjE,IAAIM,KAAK,EAAE;IACT,OAAOH,OAAO,GAAG,GAAG,GAAGC,OAAO,GAAG,GAAG,GAAGC,UAAU,GAAG,GAAG,GAAGC,KAAK;EACjE;AACF,CAAC;AAED,eAAeV,kBAAkB"},"metadata":{},"sourceType":"module"}