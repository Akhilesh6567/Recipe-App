{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nimport performanceNow from 'fbjs/lib/performanceNow';\nimport warning from 'fbjs/lib/warning';\nvar Info = function Info() {\n  _classCallCheck(this, Info);\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\nvar _sampleRate = DEBUG ? 1 : null;\nvar FillRateHelper = function () {\n  FillRateHelper.addListener = function addListener(callback) {\n    warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n    _listeners.push(callback);\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n  function FillRateHelper(getFrameMetrics) {\n    _classCallCheck(this, FillRateHelper);\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n    this._resetData();\n  }\n  FillRateHelper.prototype.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  };\n  FillRateHelper.prototype.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n    var start = this._samplesStartTime;\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n    if (this._info.sample_count < _minSampleCount) {\n      this._resetData();\n      return;\n    }\n    var total_time_spent = performanceNow() - start;\n    var info = Object.assign({}, this._info, {\n      total_time_spent: total_time_spent\n    });\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived: derived,\n        info: info\n      });\n    }\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n    this._resetData();\n  };\n  FillRateHelper.prototype.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n    var dOffset = scrollMetrics.dOffset,\n      offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength;\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n    var now = performanceNow();\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n    this._anyBlankStartTime = null;\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n    var firstFrame = this._getFrameMetrics(first);\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    }\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n    var blankBottom = 0;\n    var last = state.last;\n    var lastFrame = this._getFrameMetrics(last);\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    }\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n    return blankness;\n  };\n  FillRateHelper.prototype.enabled = function enabled() {\n    return this._enabled;\n  };\n  FillRateHelper.prototype._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n  return FillRateHelper;\n}();\nexport default FillRateHelper;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","performanceNow","warning","Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","DEBUG","_listeners","_minSampleCount","_sampleRate","FillRateHelper","addListener","callback","push","remove","filter","listener","setSampleRate","sampleRate","setMinSampleCount","minSampleCount","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","Math","random","_resetData","prototype","activate","console","debug","deactivateAndFlush","start","info","Object","assign","derived","avg_blankness","avg_speed","avg_speed_when_any_blank","any_blank_per_min","any_blank_time_frac","mostly_blank_per_min","mostly_blank_time_frac","key","round","forEach","computeBlankness","props","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","abs","scrollSpeed","now","blankTop","first","firstFrame","last","inLayout","min","max","blankBottom","lastFrame","bottomEdge","length","blankness","enabled"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/node_modules/react-native-web/dist/vendor/react-native/FillRateHelper/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport performanceNow from 'fbjs/lib/performanceNow';\nimport warning from 'fbjs/lib/warning';\n\nvar Info = function Info() {\n  _classCallCheck(this, Info);\n\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n};\n\nvar DEBUG = false;\n\nvar _listeners = [];\nvar _minSampleCount = 10;\nvar _sampleRate = DEBUG ? 1 : null;\n\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\n\nvar FillRateHelper = function () {\n  FillRateHelper.addListener = function addListener(callback) {\n    warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n    _listeners.push(callback);\n    return {\n      remove: function remove() {\n        _listeners = _listeners.filter(function (listener) {\n          return callback !== listener;\n        });\n      }\n    };\n  };\n\n  FillRateHelper.setSampleRate = function setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  };\n\n  FillRateHelper.setMinSampleCount = function setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  };\n\n  function FillRateHelper(getFrameMetrics) {\n    _classCallCheck(this, FillRateHelper);\n\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n    this._resetData();\n  }\n\n  FillRateHelper.prototype.activate = function activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = performanceNow();\n    }\n  };\n\n  FillRateHelper.prototype.deactivateAndFlush = function deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n    var start = this._samplesStartTime; // const for flow\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n      return;\n    }\n    var total_time_spent = performanceNow() - start;\n    var info = Object.assign({}, this._info, {\n      total_time_spent: total_time_spent\n    });\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n      console.debug('FillRateHelper deactivateAndFlush: ', { derived: derived, info: info });\n    }\n    _listeners.forEach(function (listener) {\n      return listener(info);\n    });\n    this._resetData();\n  };\n\n  FillRateHelper.prototype.computeBlankness = function computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n\n    // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n    var now = performanceNow();\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n    this._anyBlankStartTime = null;\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n    this._mostlyBlankStartTime = null;\n\n    var blankTop = 0;\n    var first = state.first;\n    var firstFrame = this._getFrameMetrics(first);\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    }\n    // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n    var blankBottom = 0;\n    var last = state.last;\n    var lastFrame = this._getFrameMetrics(last);\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    }\n    // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n    return blankness;\n  };\n\n  FillRateHelper.prototype.enabled = function enabled() {\n    return this._enabled;\n  };\n\n  FillRateHelper.prototype._resetData = function _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  };\n\n  return FillRateHelper;\n}();\n\nexport default FillRateHelper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}