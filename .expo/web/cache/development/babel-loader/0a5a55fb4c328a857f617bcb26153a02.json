{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./RecipesStyles\";\nimport RecipeCard from \"./RecipeCard\";\nimport Spinner from \"../assets/Spinner.gif\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Recipes = function Recipes(props) {\n  var isLoading = props.isLoading,\n    setIsLoading = props.setIsLoading;\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 800);\n  }, [isLoading]);\n  if (isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(Image, {\n        source: Spinner,\n        style: {\n          width: 100,\n          height: 100\n        }\n      })\n    });\n  }\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollableView,\n    children: props.dishes.map(function (dish, index) {\n      return _jsx(RecipeCard, {\n        dish: dish,\n        navigation: props.navigation\n      }, dish.id);\n    })\n  });\n};\nexport default Recipes;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","Text","View","Image","styles","RecipeCard","Spinner","jsx","_jsx","Recipes","props","isLoading","setIsLoading","setTimeout","style","flex","justifyContent","alignItems","children","source","width","height","contentContainerStyle","scrollableView","dishes","map","dish","index","navigation","id"],"sources":["C:/Users/ELITE BOOK/Desktop/Update/Recipe-App/components/Recipes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ScrollView, Text, View, Image } from 'react-native'\r\nimport styles from './RecipesStyles'\r\nimport RecipeCard from './RecipeCard'\r\nimport Spinner from '../assets/Spinner.gif';\r\n\r\nconst Recipes = (props) => {\r\n\r\n  const { isLoading, setIsLoading } = props;\r\n\r\n  useEffect(() => {\r\n\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 800);\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Image source={Spinner} style={{ width: 100, height: 100 }} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollableView}>\r\n\r\n      {props.dishes.map((dish, index) => {\r\n\r\n        return <RecipeCard key={dish.id} dish={dish} navigation={props.navigation} />\r\n\r\n      })}\r\n\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nexport default Recipes;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAElD,OAAOC,MAAM;AACb,OAAOC,UAAU;AACjB,OAAOC,OAAO;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAE5C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAK;EAEzB,IAAQC,SAAS,GAAmBD,KAAK,CAAjCC,SAAS;IAAEC,YAAY,GAAKF,KAAK,CAAtBE,YAAY;EAE/Bb,SAAS,CAAC,YAAM;IAEdc,UAAU,CAAC,YAAM;MACfD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EAEf,IAAIA,SAAS,EAAE;IACb,OACEH,IAAA,CAACN,IAAI;MAACY,KAAK,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAC,QAAA,EACvEV,IAAA,CAACL,KAAK;QAACgB,MAAM,EAAEb,OAAQ;QAACQ,KAAK,EAAE;UAAEM,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI;MAAE;IAAG,EACzD;EAEX;EAEA,OACEb,IAAA,CAACR,UAAU;IAACsB,qBAAqB,EAAElB,MAAM,CAACmB,cAAe;IAAAL,QAAA,EAEtDR,KAAK,CAACc,MAAM,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;MAEjC,OAAOnB,IAAA,CAACH,UAAU;QAAeqB,IAAI,EAAEA,IAAK;QAACE,UAAU,EAAElB,KAAK,CAACkB;MAAW,GAAlDF,IAAI,CAACG,EAAE,CAA8C;IAE/E,CAAC;EAAC,EAES;AAEjB,CAAC;AAED,eAAepB,OAAO"},"metadata":{},"sourceType":"module"}